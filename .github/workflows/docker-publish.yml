name: Publish Pinepods Image to DockerHub

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: madeofpendletonwool/pinepods

jobs:
  build-x86:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Build and push x86 image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-x86 -f dockerfile .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-x86
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-x86 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-x86
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-x86

  build-arm:
    runs-on: pi4
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Build and push ARM image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-arm -f dockerfile-arm .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-arm
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-arm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm

  create-and-push-manifest:
    needs: [build-x86, build-arm]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Create and push Docker manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-x86 \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-arm
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-x86 \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
